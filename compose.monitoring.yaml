---
services:
  prometheus:
      image: prom/prometheus:latest
      container_name: prometheus
      ports:
        - "9090:9090"
      volumes:
        - ./etc/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
        - prometheus_data:/prometheus
      command:
        - '--config.file=/etc/prometheus/prometheus.yml'
        - '--storage.tsdb.path=/prometheus'
        - '--web.console.libraries=/etc/prometheus/console_libraries'
        - '--web.console.templates=/etc/prometheus/consoles'
        - '--web.enable-lifecycle'
        - '--web.enable-admin-api'
      restart: unless-stopped
      networks:
        - monitoring

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
    restart: unless-stopped
    networks:
      - monitoring

  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger
    ports:
      - "16686:16686"    # Jaeger UI
      - "14268:14268"    # HTTP collector
      - "14250:14250"    # gRPC collector
      - "6831:6831/udp"  # UDP agent
      - "6832:6832/udp"  # UDP agent
      - "5778:5778"      # HTTP agent
    environment:
      - COLLECTOR_OTLP_ENABLED=true
      - COLLECTOR_ZIPKIN_HOST_PORT=:9411
    restart: unless-stopped
    networks:
      - monitoring

  sentry-postgres:
    image: postgres:15-alpine
    container_name: sentry-postgres
    environment:
      POSTGRES_USER: sentry
      POSTGRES_PASSWORD: sentry
      POSTGRES_DB: sentry
    volumes:
      - sentry_postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - monitoring

  sentry-redis:
    image: redis:7-alpine
    container_name: sentry-redis
    restart: unless-stopped
    networks:
      - monitoring
    volumes:
      - sentry_redis_data:/data

  sentry:
    image: sentry:latest
    container_name: sentry-web
    ports:
      - "9000:9000"
    environment:
      SENTRY_SECRET_KEY: 'your-secret-key-here-change-this-in-production'
      SENTRY_POSTGRES_HOST: sentry-postgres
      SENTRY_POSTGRES_PORT: 5432
      SENTRY_DB_NAME: sentry
      SENTRY_DB_USER: sentry
      SENTRY_DB_PASSWORD: sentry
      SENTRY_REDIS_HOST: sentry-redis
      SENTRY_REDIS_PORT: 6379
      SENTRY_WEB_HOST: 0.0.0.0
      SENTRY_WEB_PORT: 9000
    depends_on:
      - sentry-redis
      - sentry-postgres
    restart: unless-stopped
    networks:
      - monitoring
    volumes:
      - sentry_data:/var/lib/sentry/files

  sentry-worker:
    image: sentry:latest
    container_name: sentry-worker
    command: ["sentry", "run", "worker"]
    environment:
      SENTRY_SECRET_KEY: 'your-secret-key-here-change-this-in-production'
      SENTRY_POSTGRES_HOST: sentry-postgres
      SENTRY_POSTGRES_PORT: 5432
      SENTRY_DB_NAME: sentry
      SENTRY_DB_USER: sentry
      SENTRY_DB_PASSWORD: sentry
      SENTRY_REDIS_HOST: sentry-redis
      SENTRY_REDIS_PORT: 6379
    depends_on:
      - sentry-redis
      - sentry-postgres
    restart: unless-stopped
    networks:
      - monitoring

  # Sentry Cron
  sentry-cron:
    image: sentry:latest
    container_name: sentry-cron
    command: ["sentry", "run", "cron"]
    environment:
      SENTRY_SECRET_KEY: 'your-secret-key-here-change-this-in-production'
      SENTRY_POSTGRES_HOST: sentry-postgres
      SENTRY_POSTGRES_PORT: 5432
      SENTRY_DB_NAME: sentry
      SENTRY_DB_USER: sentry
      SENTRY_DB_PASSWORD: sentry
      SENTRY_REDIS_HOST: sentry-redis
      SENTRY_REDIS_PORT: 6379
    depends_on:
      - sentry-redis
      - sentry-postgres
    restart: unless-stopped
    networks:
      - monitoring

volumes:
  prometheus_data:
  sentry_postgres_data:
  sentry_redis_data:
  sentry_data:
  grafana_data:

networks:
  monitoring:
    driver: bridge
